+++
title = "Updated RustBlog Project Specification Text Version"
date = 2025-10-03
[taxonomies]
tags = ["project", "specification", "updates"]
categories = ["documentation"]
+++
<pre>
Specification: RustBlog - Minimalist Markdown Blog with Zola and Tailwind CSS (Updated)

  ---

  1. Project Overview
   - Name: RustBlog
   - Objective: Build a minimalist static blog using Zola and Tailwind CSS on a Mac mini M1, deployed to GitHub Pages.
   - Platform: macOS (M1, ARM64, Ventura/Sonoma+)
   - Deployment: GitHub Pages
   - Features:
     - Responsive, minimalist blog with homepage, blog index, and post pages.
     - Markdown content with syntax highlighting.
     - Tags and categories with dedicated pages.
     - Tailwind CSS with a clean, monochromatic design and dark mode toggle.
     - Automated deployment via GitHub Actions.

  2. Requirements
   - Hardware: Mac mini M1 (macOS Ventura/Sonoma+)
   - Software:
     - Zola (v0.19.1+, ARM64)
     - Node.js (v18+, ARM64), npm
     - Homebrew, Git
     - VS Code (or similar)
   - Dependencies:
     - Tailwind CSS, PostCSS, Autoprefixer, @tailwindcss/typography
     - Alpine.js (via CDN for dark mode and mobile menu)
     - GitHub repository

  3. Project Setup
   1. Install Dependencies:

    1    # Install Homebrew (if not installed)
    2    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    3 
    4    # Install Node.js
    5    brew install node
    6 
    7    # Install Zola (v0.19.1, ARM64)
    8    curl -L https://github.com/getzola/zola/releases/download/v0.19.1/zola-v0.19.1-aarch64-apple-darwin.tar.gz | tar -xz
    9    chmod +x zola
   10    sudo mv zola /usr/local/bin/
   11 
   12    # Install Git
   13    brew install git

   2. Initialize Project:

    1    # Create and enter project directory
    2    mkdir rustblog && cd rustblog
    3 
    4    # Initialize Zola in the current directory
    5    zola init .
    6    # Set base_url to http://localhost:1111 when prompted
    7 
    8    # Initialize Node.js and install Tailwind CSS
    9    npm init -y
   10    npm install -D tailwindcss postcss autoprefixer @tailwindcss/typography
   11    npx tailwindcss init -p

  4. File Structure

    1 rustblog/
    2 ├── .github/workflows/deploy.yml
    3 ├── config.toml
    4 ├── content/
    5 │   ├── _index.md
    6 │   └── blog/
    7 │       ├── _index.md
    8 │       ├── first-post.md
    9 │       ├── second-post.md
   10 │       └── third-post.md
   11 ├── static/css/
   12 │   ├── tailwind.css
   13 │   └── output.css
   14 ├── templates/
   15 │   ├── base.html
   16 │   ├── index.html
   17 │   ├── blog_index.html
   18 │   ├── page.html
   19 │   ├── taxonomy.html
   20 │   └── taxonomies.html
   21 ├── package.json
   22 ├── postcss.config.js
   23 ├── tailwind.config.js
   24 └── .gitignore

  Create Structure:

   1 mkdir -p .github/workflows content/blog static/css templates
   2 touch .github/workflows/deploy.yml config.toml
   3 touch content/_index.md content/blog/_index.md content/blog/first-post.md
   4 touch content/blog/second-post.md content/blog/third-post.md
   5 touch static/css/tailwind.css static/css/output.css
   6 touch templates/base.html templates/index.html templates/blog_index.html
   7 touch templates/page.html templates/taxonomy.html templates/taxonomies.html
   8 touch .gitignore postcss.config.js

  5. Configuration
   - config.toml:

    1   title = "RustBlog"
    2   base_url = "https://yoloinfinity55.github.io/rustblog"
    3   description = "A minimalist blog with Zola and Tailwind CSS"
    4   default_language = "en"
    5 
    6   taxonomies = [
    7     {name = "tags", paginate_by = 5},
    8     {name = "categories", paginate_by = 5},
    9   ]
   10 
   11   [markdown]
   12   highlight_code = true

   - tailwind.config.js:

    1   module.exports = {
    2     content: ['./templates/**/*.{html,md}', './content/**/*.{html,md}'],
    3     darkMode: 'class',
    4     theme: {
    5       extend: {
    6         colors: {
    7           accent: '#1E40AF',
    8           bg: '#F7F7F7',
    9           text: '#1F2A44',
   10           darkBg: '#1F2A44',
   11           darkText: '#E5E7EB',
   12         },
   13         typography: (theme) => ({
   14           DEFAULT: {
   15             css: {
   16               color: theme('colors.text'),
   17               'a': { color: theme('colors.accent'), 'text-decoration': 'none', 'transition': 'color 0.2s', 'font-weight': '500' },
   18               'a:hover': { color: theme('colors.accent'), 'text-decoration': 'underline' },
   19               'h1, h2, h3, h4, h5, h6': { color: theme('colors.text'), 'font-weight': '600' },
   20               'code': { background: theme('colors.gray.100'), padding: '2px 4px', borderRadius: '2px', 'font-size': '0.9em' },
   21               'pre': { background: theme('colors.gray.100'), padding: '1rem', borderRadius: '4px' },
   22               'p': { margin: '1.5rem 0' },
   23             },
   24           },
   25           dark: {
   26             css: {
   27               color: theme('colors.darkText'),
   28               'a': { color: theme('colors.accent') },
   29               'a:hover': { color: theme('colors.accent'), 'text-decoration': 'underline' },
   30               'h1, h2, h3, h4, h5, h6': { color: theme('colors.darkText') },
   31               'code': { background: theme('colors.gray.700'), color: theme('colors.darkText') },
   32               'pre': { background: theme('colors.gray.700') },
   33             },
   34           },
   35         }),
   36         fontFamily: {
   37           sans: ['Inter', 'ui-sans-serif', 'system-ui', '-apple-system', 'sans-serif'],
   38         },
   39       },
   40     },
   41     plugins: [require('@tailwindcss/typography')],
   42   }

   - package.json:

    1   {
    2     "scripts": {
    3       "build:css": "tailwindcss -i static/css/tailwind.css -o static/css/output.css --minify",
    4       "watch:css": "tailwindcss -i static/css/tailwind.css -o static/css/output.css --watch",
    5       "build": "npm run build:css && zola build"
    6     },
    7     "devDependencies": {
    8       "@tailwindcss/typography": "^0.5.10",
    9       "autoprefixer": "^10.4.20",
   10       "postcss": "^8.4.47",
   11       "tailwindcss": "^3.4.13"
   12     }
   13   }

   - postcss.config.js:

   1   module.exports = {
   2     plugins: {
   3       tailwindcss: {},
   4       autoprefixer: {},
   5     }
   6   }

   - static/css/tailwind.css:
   1   @tailwind base;
   2   @tailwind components;
   3 
   4   @tailwind utilities;

   - .gitignore:
   1   node_modules/
   2   public/
   3   static/css/output.css

  6. Content and Templates
   1. Homepage (`content/_index.md`):

   1    +++
   2    title = "Welcome to RustBlog"
   3    template = "index.html"
   4    +++
   5    # Welcome
   6    Check out the [blog](blog)!

   2. Blog Section (`content/blog/_index.md`):

   1    +++
   2    title = "Blog"
   3    template = "blog_index.html"
   4    sort_by = "date"
   5    +++

   3. Sample Post (`content/blog/first-post.md`):

   1    +++
   2    title = "My First Blog Post"
   3    date = 2025-09-30
   4    [taxonomies]
   5    tags = ["tech", "rust"]
   6    categories = ["blog"]
   7    +++
   8    # Welcome
   9    Sample post.
     print("Hello, Zola!")
   1 

   4. Second Sample Post (`content/blog/second-post.md`):

   1    +++
   2    title = "My Second Blog Post"
   3    date = 2025-10-01
   4    [taxonomies]
   5    tags = ["test", "blogging"]
   6    categories = ["updates"]
   7    +++
   8    # Another Post
   9    This is my second test blog post. It's great to be blogging!
     console.log("Hello from the second post!");
   1 

   5. Third Sample Post (`content/blog/third-post.md`):

   1    +++
   2    title = "My Third Blog Post"
   3    date = 2025-10-02
   4    [taxonomies]
   5    tags = ["thoughts", "personal"]
   6    categories = [\"reflections\"]
   7    +++
   8    # Third Time's the Charm
   9    This is my third blog post. Hopefully, this one deploys smoothly!
     fn main() {
         println!("Hello, third post!");
     }
   1 

   6. Templates:
      - `templates/base.html`:

    1      <!DOCTYPE html>
    2      <html lang="en" class="light" x-data="{ darkMode: false, menuOpen: false }" x-init="if (localStorage.theme === 'dark' || (!('theme' 
      in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) { document.documentElement.classList.add('dark'); darkMode
      = true; }">
    3      <head>
    4        <meta charset="UTF-8">
    5        <meta name="viewport" content="width=device-width, initial-scale=1.0">
    6        <title>{{ config.title }} | {% block title %}{% endblock %}</title>
    7        <link rel="stylesheet" href="{{ get_url(path='css/output.css') }}">
    8        <script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
    9      </head>
   10      <body class="bg-bg dark:bg-darkBg text-text dark:text-darkText min-h-screen flex flex-col font-sans">
   11        <header class="border-b border-gray-200 dark:border-gray-700 sticky top-0">
   12          <nav class="container mx-auto px-6 py-4 flex justify-between items-center">
   13            <a href="{{ get_url(path='/') }}" class="text-2xl font-semibold">{{ config.title }}</a>
   14            <div class="hidden md:flex items-center space-x-8">
   15              <a href="{{ get_url(path='/') }}" class="hover:text-accent transition-colors">Home</a>
   16              <a href="{{ get_url(path='blog') }}" class="hover:text-accent transition-colors">Blog</a>
   17              <a href="{{ get_url(path='tags') }}" class="hover:text-accent transition-colors">Tags</a>
   18              <button @click="darkMode = !darkMode; localStorage.theme = darkMode ? 'dark' : 'light'; 
      document.documentElement.classList.toggle('dark')" class="text-text dark:text-darkText hover:text-accent transition-colors">
   19                <span x-show="!darkMode">🌙</span>
   20                <span x-show="darkMode">☀</span>
   21              </button>
   22            </div>
   23            <div class="md:hidden">
   24              <button @click="menuOpen = !menuOpen" class="text-text dark:text-darkText hover:text-accent">
   25                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
   26                  <path :d="menuOpen ? 'M6 18L18 6M6 6l12 12' : 'M4 6h16M4 12h16m-7 6h7'" stroke-linecap="round" stroke-linejoin="round" 
      stroke-width="2"></path>
   27                </svg>
   28              </button>
   29            </div>
   30          </nav>
   31          <div x-show="menuOpen" class="md:hidden border-t border-gray-200 dark:border-gray-700 px-6 py-4">
   32            <a href="{{ get_url(path='/') }}" class="block py-2 hover:text-accent transition-colors">Home</a>
   33            <a href="{{ get_url(path='blog') }}" class="block py-2 hover:text-accent transition-colors">Blog</a>
   34            <a href="{{ get_url(path='tags') }}" class="block py-2 hover:text-accent transition-colors">Tags</a>
   35            <button @click="darkMode = !darkMode; localStorage.theme = darkMode ? 'dark' : 'light'; 
      document.documentElement.classList.toggle('dark')" class="block py-2 hover:text-accent transition-colors">
   36              <span x-text="darkMode ? '☀️ Light Mode' : '🌙 Dark Mode'></span>
   37            </button>
   38          </div>
   39        </header>
   40        <main class="container mx-auto px-6 py-12 flex-grow">
   41            {% block content %}{% endblock %}
   42          </main>
   43          <footer class="border-t border-gray-200 dark:border-gray-700 text-center py-6 text-sm text-gray-500 dark:text-gray-400">
   44            <p>&copy; {{ now() | date(format="%Y") }} {{ config.title }}</p>
   45          </footer>
   46        </body>
   47        </html>

      - `templates/index.html`:

    1      {% extends "base.html" %}
    2      {% block title %}{{ config.title }}{% endblock %}
    3      {% block content %}
    4        <section class="py-16 text-center">
    5          <h1 class="text-3xl md:text-4xl font-semibold mb-6">{{ config.title }}</h1>
    6          <div class="prose dark:prose-invert max-w-3xl mx-auto">
    7            {{ section.content | safe }}
    8          </div>
    9        </section>
   10      {% endblock %}

      - `templates/blog_index.html`:

    1      {% extends "base.html" %}
    2      {% block title %}Blog{% endblock %}
    3      {% block content %}
    4        <h1 class="text-2xl md:text-3xl font-semibold text-text dark:text-darkText mb-8">{{ section.title }}</h1>
    5        <div class="space-y-8">
    6          {% for post in section.pages %}
    7            <article class="border-b border-gray-200 dark:border-gray-700 pb-6">
    8              <a href="{{ post.permalink }}" class="text-xl font-medium text-accent hover:underline">{{ post.title }}</a>
    9              <p class="text-sm text-gray-500 dark:text-gray-400 mt-1">{{ post.date | date(format="%B %d, %Y") }}</p>
   10              <p class="mt-2 text-gray-700 dark:text-gray-300">{{ post.summary | safe }}</p>
   11            </article>
   12          {% endfor %}
   13        </div>
   14      {% endblock %}

      - `templates/page.html`:

    1      {% extends "base.html" %}
    2      {% block title %}{{ page.title }}{% endblock %}
    3      {% block content %}
    4        <article class="prose dark:prose-invert max-w-3xl mx-auto">
    5          <h1 class="text-2xl md:text-3xl font-semibold text-text dark:text-darkText mb-4">{{ page.title }}</h1>
    6          <p class="text-sm text-gray-500 dark:text-gray-400 mb-6">{{ page.date | date(format="%B %d, %Y") }}</p>
    7          {{ page.content | safe }}
    8          {% if page.taxonomies.tags %}
    9            <div class="mt-8 text-sm">
   10              <span class="text-gray-500 dark:text-gray-400">Tags:</span>
   11              {% for tag in page.taxonomies.tags %}
   12                <a href="/tags/{{ tag }}" class="text-accent hover:underline">{{ tag }}</a>{% if not loop.last %}, {% endif %}
   13              {% endfor %}
   14            </div>
   15          {% endif %}
   16        </article>
   17      {% endblock %}

      - `templates/taxonomies.html`:

    1      {% extends "base.html" %}
    2      {% block title %}Tags{% endblock %}
    3      {% block content %}
    4        <h1 class="text-2xl md:text-3xl font-semibold text-text dark:text-darkText mb-8">Tags</h1>
    5        <ul class="space-y-2 max-w-3xl">
    6          {% for term in config.taxonomies.tags %}
    7            <li>
    8              <a href="/{{ term.name }}" class="text-accent hover:underline">{{ term.name | capitalize }}</a>
    9              <span class="text-gray-500 dark:text-gray-400">({{ term.pages | length }})</span>
   10            </li>
   11          {% endfor %}
   12        </ul>
   13      {% endblock %}

      - `templates/taxonomy.html`:

    1      {% extends "base.html" %}
    2      {% block title %}{{ term.name | capitalize }}{% endblock %}
    3      {% block content %}
    4        <h1 class="text-2xl md:text-3xl font-semibold text-text dark:text-darkText mb-8">{{ term.name | capitalize }}</h1>
    5        <div class="space-y-8 max-w-3xl">
    6          {% for page in term.pages %}
    7            <article class="border-b border-gray-200 dark:border-gray-700 pb-6">
    8              <a href="{{ page.permalink }}" class="text-xl font-medium text-accent hover:underline">{{ page.title }}</a>
    9              <p class="text-sm text-gray-500 dark:text-gray-400 mt-1">{{ page.date | date(format="%B %d, %Y") }}</p>
   10            </article>
   11          {% endfor %}
   12        </div>
   13      {% endblock %}

  7. Development
   - Local Server:
   1   cd rustblog
   2   zola serve  # Runs at http://localhost:1111
   - Watch CSS:
   1   npm run watch:css  # In a new terminal
   - Build:
   1   npm run build  # Outputs to public/

  8. Deployment
   1. Git Setup:

   1    cd rustblog
   2    git init
   3    git add .
   4    git commit -m "Initial commit"
   5    # Create GitHub repo named 'rustblog' (e.g., via `gh repo create rustblog --public`)
   6    git remote add origin https://github.com/yoloinfinity55/rustblog.git
   7    git push -u origin main

   2. GitHub Actions (`rustblog/.github/workflows/deploy.yml`):

    1    name: Deploy to GitHub Pages
    2    on:
    3      push:
    4        branches: [main]
    5    jobs:
    6      build-and-deploy:
    7        runs-on: ubuntu-latest
    8        steps:
    9          - uses: actions/checkout@v3
   10          - run: |
   11              curl -L https://github.com/getzola/zola/releases/download/v0.19.1/zola-v0.19.1-x86_64-unknown-linux-gnu.tar.gz | tar -xz
   12              sudo mv zola /usr/local/bin/
   13          - uses: actions/setup-node@v3
   14            with: { node-version: '18' }
   15          - run: npm install
   16          - run: npm run build:css
   17          - run: zola build
   18          - uses: peaceiris/actions-gh-pages@v3
   19            with:
   20              github_token: ${{ secrets.GITHUB_TOKEN }}
   21              publish_dir: ./public

   3. Configure GitHub Pages:
      - Update config.toml (already done):
   1      base_url = "https://yoloinfinity55.github.io/rustblog"
      - GitHub Settings > Pages > Source: gh-pages branch
      - Commit and push (already done):
   1      git add .
   2      git commit -m "Update for deployment"
   3      git push

  9. Features
   - Minimalist Design: Monochromatic palette (grays, #1E40AF accent), clean Inter font, ample whitespace, no shadows, subtle dividers.
   - Responsive: Mobile-friendly navbar with hamburger menu, content limited to max-w-3xl.
   - Dark Mode: Toggled via emoji button (🌙/☀️), persists with localStorage.
   - Markdown Styling: @tailwindcss/typography with simplified prose styles.
   - Syntax Highlighting: Enabled via Zola’s highlight_code = true.
   - Navigation: Text-only links (Home, Blog, Tags), no decorative buttons.
   - Taxonomies: Tags and categories with dedicated pages.

  10. Testing
   - Local: Verify at http://localhost:1111 for:
     - Homepage, blog index, post pages, and tag pages.
     - Responsiveness (mobile, tablet, desktop).
     - Dark mode toggle and syntax highlighting.
   - Production: Check at https://yoloinfinity55.github.io/rustblog for:
     - Correct asset loading (CSS, Alpine.js).
     - Functional links and taxonomy pages.

  11. Maintenance
   - Add Posts: Create new .md files in content/blog/ or content/blog/updated-project-specification.md.
   - Update Styles: Modify static/css/tailwind.css or tailwind.config.js.
   - Update Dependencies: Run brew upgrade and npm update.

  12. Troubleshooting
   - Zola: Use ARM64 binary (aarch64-apple-darwin). Check config.toml for correct base_url.
   - Tailwind: Verify tailwind.config.js paths, run npm run build:css if styles fail.
   - GitHub Pages: Check Actions logs, ensure publish_dir is ./public and base_url matches GitHub Pages URL.
   - Dark Mode: Ensure Alpine.js CDN is accessible, check localStorage in browser dev tools.

  13. Deliverables
   - Static blog hosted at https://yoloinfinity55.github.io/rustblog.
   - GitHub repository: rustblog.
   - Minimalist, responsive blog with sample content, tags, and categories.
   - Automated deployment pipeline via GitHub Actions.

  14. Timeline
   - Day 1: Setup dependencies, initialize project, create templates and content.
   - Day 2: Test locally, set up Git and GitHub Actions.
   - Day 3: Deploy to GitHub Pages, validate production site.

  15. Resources
   - Zola Docs (https://www.getzola.org/documentation/)
   - Tailwind CSS Docs (https://tailwindcss.com/docs)
   - GitHub Pages (https://docs.github.com/en/pages)
   - Alpine.js Docs (https://alpinejs.dev/)
   - Inter Font (https://rsms.me/inter/)

  ---

  Key Updates from Original Specification
   - Folder Structure: Eliminated nested rustblog/rustblog/ by using zola init ., ensuring a flat structure (rustblog/config.toml, rustblog/content/, 
     etc.).
   - Minimalist Design: Implemented a monochromatic palette, Inter font, increased whitespace, removed shadows and decorative buttons, and used subtle 
     dividers.
   - Paths: Updated tailwind.config.js, package.json, and deploy.yml to reflect the new structure (static/ instead of rustblog/static/). Corrected 
     asset and navigation links in templates/base.html and content/_index.md to use Zola's get_url function or relative paths for proper GitHub Pages 
     deployment.
   - Templates: Enhanced with minimalist styling, including a simplified navbar, emoji-based dark mode toggle, and flat post listings. Initialized 
     menuOpen variable in Alpine.js x-data to prevent ReferenceError.
   - Functionality: Preserved responsive navigation, dark mode, syntax highlighting, and taxonomy pages.
   - Content: Added second-post.md and third-post.md for testing and demonstration.
  
</pre>
